#!/bin/bash

#------------------------------------------------
# Set up or rerun calculation:
# Thiophene coupling as a function of angular difference at 5 Ang distance
# 
# generates jupyter notebook for interactive sessions
#  and python script for job submission to queue
#  including for restarting interupted PyCDFT calculations
#
# A run for the initial ground state wavefunctions is needed first
#------------------------------------------------

# input parameters
tol=5e-5                              # CDFT tolerance
Vstart_a="V_brak = V"
Vstart_b="V_brak = V"        # CDFT constraint potential
optimizer="brenth"
inputs=$( ls *.in )

main () {
for inp in ${inputs[@]}; do
  IFS='.' read -ra name <<< $inp
  fol=$name
 
  cd ${fol}
  # convert notebook to python script
  cp ../thiophene-coupling-tmp.ipynb ./${name}-thiophene-coupling.ipynb
  jupyter nbconvert --to script ${name}-thiophene-coupling.ipynb
  cp ../${name}.cif .

  # 
  sed -i "s/REPL1/${name}.cif/g" ${name}-thiophene-coupling.py
  if [ -f ${name}.out ]; then
     grid=($(grep "np2v" ${name}.out | awk '{print $(NF-7),$(NF-4),$(NF-1)}'))
     sed -i "s/REPLX/${grid[0]}/g" ${name}-thiophene-coupling.py
     sed -i "s/REPLY/${grid[1]}/g" ${name}-thiophene-coupling.py
     sed -i "s/REPLZ/${grid[2]}/g" ${name}-thiophene-coupling.py
  else
     echo "Missing DFT output file!"
     exit 1 
  fi

  sed -i "s/REPLOPT_A/${optimizer}/g" ${name}-thiophene-coupling.py
  sed -i "s/REPL_TOL/${tol}/g" ${name}-thiophene-coupling.py
  sed -i "s/REPLV_START_A/${Vstart_a}/g" ${name}-thiophene-coupling.py
  sed -i "s/REPLV_START_B/${Vstart_b}/g" ${name}-thiophene-coupling.py

 
  echo "====== Done setup:  ${name}  ======="
  cd ../
done
}

# actual running set up
main
exit
